<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');include_once(APPPATH . 'models/Base_model.php');class Tag_model extends Base_model {	public function __construct() {		parent::__construct();       	$this->load->model('user_model');		$this->table_name = 'tag';	}	public function is_collect_tag($id){        	$this->me = $this->user_model->check_login();        	$temp_collect = array();		$collect_array = json_decode($this->me['skilled_tags']);		foreach ($collect_array as $key => $value) {			if($value->t == $id){				return true;			}		}		return false;	}	public function collect_tag($id){        	$this->me = $this->user_model->check_login();		$collect_array = json_decode($this->me['skilled_tags']);		array_push($collect_array , array("t" => $id));		$collect_array = json_encode($collect_array);		if($this->user_model->edit($this->me['id'],array(			"skilled_tags" => $collect_array		))){			return true;		}else{			return false;		}	}		public function uncollect_tag($id){        	$this->me = $this->user_model->check_login();        	$temp_collect = array();		$collect_array = json_decode($this->me['skilled_tags']);		foreach ($collect_array as $key => $value) {			if($value->t != $id){				array_push($temp_collect, array("t" => $value->t));			}		}		$temp_collect = json_encode($temp_collect);		if($this->user_model->edit($this->me['id'],array(			"skilled_tags" => $temp_collect		))){			return true;		}else{			return false;		}	}	public function add_tag($name , $type = "1" , $content = ""){		if(!$this->is_exist(array("name" => $name))){			$this->create(array(				"count" => 0,				"name" => $name,				"type" => $type,				"content" => $type,			));		}	}	public function get_tag($start = 0 , $count = 5 , $id = "all"){		if($id == "all")$this->db->limit($start * $count , $count);		$tag_data = $id == "all" ? $this->db->get($this->table_name)->result_array() : $this->get(array("name" => $id));		return count($tag_data) <= 0 ? false : $tag_data;	}	public function add_tag_json($json){		$result = array();		$json = substr($json, 0 , strlen($json) - 2) . "]";		$json = json_decode($json);		if(count(@$json[0]) < 1){return -1;}		foreach($json as $tag) {			if(strlen($tag->name) < 2 && strlen($tag->name) > 12){				return -2;			}			if(!$this->is_exist(array("name" => $tag->name))){				$this->create(array(					"count" => "0",					"name" => $tag->name,					"type" => "1",					"content" => "",				));			}		}		return 0;	}	public function plus($id, $count = 1) {		$query = $this->db->select('count')->where('id', $id)->get($this->table_name)->row_array();		$this->db->where('id', $id)->update($this->table_name, array(			'count' => $query['count'] + $count		));	}	public function minus($id, $count = 1) {		$query = $this->db->select('count')->where('id', $id)->get($this->table_name)->row_array();		$this->db->where('id', $id)->update($this->table_name, array(			'count' => $query['count'] - $count		));	}	public function get_list_by_json($json) {		$result = array();		$json = json_decode(substr($json, 0 , strlen($json) - 2) . "]");		if($json == "") return array();		foreach ($json as $tag) {			$result[] = $this->get(array(				'name' => $tag->name			));		}		return $result;	}}